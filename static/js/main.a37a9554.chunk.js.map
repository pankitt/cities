{"version":3,"sources":["components/Countries/Country/index.module.css","components/Cities/City/index.module.css","components/Main/index.module.css","components/App/index.module.css","components/Home/index.module.css","common/Loader/index.module.css","components/Countries/index.module.css","components/Cities/index.module.css","common/constants.ts","components/Header/index.tsx","components/Home/index.tsx","components/Countries/Country/index.tsx","api/api.ts","assets/svgIcon.tsx","common/Loader/index.tsx","components/Countries/index.tsx","hooks/useCountries.ts","components/Cities/City/index.tsx","components/Cities/index.tsx","hooks/useCities.ts","components/Main/index.tsx","components/App/index.tsx","components/Root/index.tsx","index.tsx","components/Header/index.module.css"],"names":["module","exports","PAGE","Header","className","styles","wrapper","inner","nav","to","HOME","link","COUNTRIES","CITIES","settings","Home","Country","countries","metadata","map","code","name","item","totalCount","makeRequest","url","method","params","a","options","headers","body","JSON","stringify","fetch","response","json","error","message","Error","loader","width","height","viewBox","xmlns","x1","y1","x2","y2","id","stopColor","stopOpacity","offset","fill","fillRule","transform","d","stroke","strokeWidth","attributeName","type","from","dur","repeatCount","cx","cy","r","Loader","svgIcon","Cities","useState","countriesList","setCountriesList","metaData","setMetaData","isLoading","setIsLoading","useEffect","cleanup","fetchData","result","data","catch","console","useCountries","City","cities","country","setCities","useCities","Main","page","path","element","Countries","App","main","Root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a37a9554.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Country_wrapper__1eCP_\",\"item\":\"Country_item__1FJVW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"City_wrapper__2Qq-U\",\"item\":\"City_item__3t2vW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__1pAX6\",\"page\":\"Main_page__Zgf9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__QmPOh\",\"main\":\"App_main__J9LVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__3J3Je\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3DjOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Countries_wrapper__1WBik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Cities_wrapper__7F7mV\"};","export enum PAGE {\n  HOME = '/cities',\n  COUNTRIES = '/cities/countries',\n  CITIES = '/cities/cities'\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PAGE } from 'common/constants';\nimport styles from './index.module.css';\n\nconst Header = (): JSX.Element => (\n  <div className={styles.wrapper}>\n    <div className={styles.inner}>\n      <nav className={styles.nav}>\n        <Link to={PAGE.HOME} className={styles.link}>\n          Home\n        </Link>\n        <Link to={PAGE.COUNTRIES} className={styles.link}>\n          Countries\n        </Link>\n        <Link to={PAGE.CITIES} className={styles.link}>\n          Cities\n        </Link>\n      </nav>\n      <div className={styles.settings}>settings</div>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport styles from './index.module.css';\n\nconst Home = (): JSX.Element => {\n  return <div className={styles.wrapper}>Home</div>;\n};\n\nexport default Home;\n","import React, { FC } from 'react';\nimport { ICountry, IMetaData } from 'types';\nimport styles from './index.module.css';\n\ninterface Props {\n  countries: ICountry[];\n  metadata: IMetaData;\n}\n\nconst Country: FC<Props> = ({ countries = [], metadata = {} }) => {\n  return (\n    <div className={styles.wrapper}>\n      {countries.map(({ code, name }) => (\n        <div key={code} className={styles.item}>\n          {name} - {code}\n        </div>\n      ))}\n      <div>\n        <h3>Total: {metadata.totalCount}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Country;\n","const makeRequest = async (url: string, method?: 'get' | 'post', params?: []) => {\n  const options = {\n    headers: {\n      'content-type': 'application/json',\n      'x-rapidapi-host': 'wft-geo-db.p.rapidapi.com',\n      'x-rapidapi-key': '22c953082emsha514076bb452b74p1b64aejsn1dfc41e5ca42'\n    },\n    method,\n    body:\n      params &&\n      JSON.stringify({\n        ...params\n      })\n  };\n\n  try {\n    const response = await fetch(url, options);\n    const json = await response.json();\n    const { error } = json;\n\n    if (error) {\n      const { message, code } = error;\n      throw new Error(message || code);\n    }\n\n    return json;\n  } catch (error: any) {\n    throw new Error(error);\n  }\n};\n\nexport const getCountries = () =>\n  makeRequest('https://wft-geo-db.p.rapidapi.com/v1/geo/countries?limit=10', 'get');\n\nexport const getCities = () =>\n  makeRequest('https://wft-geo-db.p.rapidapi.com/v1/geo/cities?limit=10', 'get');\n","import React from 'react';\n\nconst loader = (\n  <svg width=\"108\" height=\"108\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\">\n    <defs>\n      <linearGradient x1=\"8.042%\" y1=\"0%\" x2=\"65.682%\" y2=\"23.865%\" id=\"a\">\n        <stop stopColor=\"#5D7E9E\" stopOpacity=\"0\" offset=\"0%\" />\n        <stop stopColor=\"#5D7E9E\" stopOpacity=\".631\" offset=\"63.146%\" />\n        <stop stopColor=\"#5D7E9E\" offset=\"100%\" />\n      </linearGradient>\n    </defs>\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <g transform=\"translate(1 1)\">\n        <path d=\"M36 18c0-9.94-8.06-18-18-18\" id=\"Oval-2\" stroke=\"url(#a)\" strokeWidth=\"2\">\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            from=\"0 18 18\"\n            to=\"360 18 18\"\n            dur=\"0.9s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <circle fill=\"#fff\" cx=\"36\" cy=\"18\" r=\"1\">\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            from=\"0 18 18\"\n            to=\"360 18 18\"\n            dur=\"0.9s\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default {\n  loader\n};\n","import React from 'react';\nimport svgIcon from 'assets/svgIcon';\nimport styles from './index.module.css';\n\nconst Loader = (): JSX.Element => {\n  return <div className={styles.wrapper}>{svgIcon.loader}</div>;\n};\n\nexport default Loader;\n","import React from 'react';\nimport Country from 'components/Countries/Country';\nimport { useCountries } from 'hooks';\nimport { Loader } from 'common';\nimport styles from './index.module.css';\n\nconst Cities = (): JSX.Element => {\n  const [countriesList, metaData, isLoading] = useCountries();\n\n  return (\n    <div className={styles.wrapper}>\n      <div>\n        {isLoading ? <Loader /> : <Country countries={countriesList} metadata={metaData} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Cities;\n","import { useEffect, useState } from 'react';\nimport { ICountry, IMetaData } from 'types';\nimport { getCountries } from 'api';\n\nexport const useCountries = (): readonly [ICountry[], IMetaData, boolean] => {\n  const [countriesList, setCountriesList] = useState<ICountry[]>([]);\n  const [metaData, setMetaData] = useState<IMetaData>({} as IMetaData);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    let cleanup = false;\n\n    const fetchData = async () => {\n      const result = await getCountries();\n      if (!cleanup) {\n        setIsLoading(false);\n        setCountriesList(result.data);\n        setMetaData(result.metadata);\n      }\n    };\n\n    fetchData().catch(console.error);\n\n    return () => {\n      cleanup = true;\n    };\n  }, []);\n\n  return [countriesList, metaData, isLoading] as const;\n};\n","import React, { FC } from 'react';\nimport { ICity, IMetaData } from 'types';\nimport styles from './index.module.css';\n\ninterface Props {\n  cities: ICity[];\n  metadata: IMetaData;\n}\n\nconst City: FC<Props> = ({ cities = [], metadata = {} }) => {\n  return (\n    <div className={styles.wrapper}>\n      {cities.map(({ id, name, country }) => (\n        <div key={id} className={styles.item}>\n          {name} - {country}\n        </div>\n      ))}\n      <div>\n        <h3>Total: {metadata.totalCount}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default City;\n","import React from 'react';\nimport City from 'components/Cities/City';\nimport { useCities } from 'hooks';\nimport { Loader } from 'common';\nimport styles from './index.module.css';\n\nconst Cities = (): JSX.Element => {\n  const [cities, metaData, isLoading] = useCities();\n\n  return (\n    <div className={styles.wrapper}>\n      <div>{isLoading ? <Loader /> : <City cities={cities} metadata={metaData} />}</div>\n    </div>\n  );\n};\n\nexport default Cities;\n","import { useEffect, useState } from 'react';\nimport { ICity, IMetaData } from 'types';\nimport { getCities } from 'api';\n\nexport const useCities = (): readonly [ICity[], IMetaData, boolean] => {\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [metaData, setMetaData] = useState<IMetaData>({} as IMetaData);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    let cleanup = false;\n\n    const fetchData = async () => {\n      const result = await getCities();\n      if (!cleanup) {\n        setIsLoading(false);\n        setCities(result.data);\n        setMetaData(result.metadata);\n      }\n    };\n\n    fetchData().catch(console.error);\n\n    return () => {\n      cleanup = true;\n    };\n  }, []);\n\n  return [cities, metaData, isLoading] as const;\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { PAGE } from 'common/constants';\nimport Home from 'components/Home';\nimport Countries from 'components/Countries';\nimport Cities from 'components/Cities';\nimport styles from './index.module.css';\n\nconst Main = (): JSX.Element => {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.page}>\n        <Routes>\n          <Route path={PAGE.HOME} element={<Home />} />\n          <Route path={PAGE.COUNTRIES} element={<Countries />} />\n          <Route path={PAGE.CITIES} element={<Cities />} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Header from 'components/Header';\nimport Main from 'components/Main';\nimport styles from './index.module.css';\n\nconst App = (): JSX.Element => (\n  <div className={styles.wrapper}>\n    <div className={styles.main}>\n      <Header />\n      <Main />\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from 'components/App';\nimport './index.css';\n\nconst Root = (): JSX.Element => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nexport default Root;\n","import 'polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3SruP\",\"inner\":\"Header_inner__3Eeoc\",\"nav\":\"Header_nav__2jc3U\",\"settings\":\"Header_settings__Y7mQz\",\"link\":\"Header_link__3ZVyL\"};"],"sourceRoot":""}