{"version":3,"sources":["components/Main/index.module.css","components/App/index.module.css","components/Home/index.module.css","common/Loader/index.module.css","common/Button/index.module.css","components/Countries/index.module.css","components/Cities/index.module.css","store/geodb/types.ts","store/geodb/actions.ts","common/constants.ts","store/geodb/reducers.ts","store/geodb/context.tsx","components/Header/index.tsx","components/Home/index.tsx","components/Countries/Country/index.tsx","api/api.ts","assets/svgIcon.tsx","common/Loader/index.tsx","common/Button/index.tsx","components/Countries/index.tsx","hooks/useCountries.ts","components/Cities/City/index.tsx","components/Cities/index.tsx","hooks/useCities.ts","components/Main/index.tsx","components/App/index.tsx","components/Root/index.tsx","index.tsx","components/Header/index.module.css","components/Countries/Country/index.module.css","components/Cities/City/index.module.css"],"names":["module","exports","Types","PAGE","initialState","countries","data","links","metadata","currentOffset","totalCount","cities","reducer","state","action","type","payload","FETCH_COUNTRIES","FETCH_CITIES","GeoContext","createContext","dispatch","GeoProvider","children","useReducer","Provider","value","Header","className","styles","wrapper","inner","nav","to","HOME","link","COUNTRIES","CITIES","settings","Home","Country","title","map","code","name","item","total","makeRequest","url","method","params","a","options","headers","body","JSON","stringify","fetch","response","json","error","message","Error","loader","width","height","viewBox","xmlns","x1","y1","x2","y2","id","stopColor","stopOpacity","offset","fill","fillRule","transform","d","stroke","strokeWidth","attributeName","from","dur","repeatCount","cx","cy","r","Loader","svgIcon","Button","props","button","Cities","useState","setCountries","isLoading","setIsLoading","useContext","useEffect","cleanup","fetchData","result","catch","console","useCountries","City","loadFetch","onClick","country","setCities","log","useCities","Main","page","path","element","Countries","App","main","Root","initialEntries","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2736c925.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__1pAX6\",\"page\":\"Main_page__Zgf9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__QmPOh\",\"main\":\"App_main__J9LVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__3J3Je\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3DjOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2vhyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Countries_wrapper__1WBik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Cities_wrapper__7F7mV\"};","import { IListCountries, IListCities } from 'types';\n\nexport enum Types {\n  FETCH_COUNTRIES = 'FETCH_COUNTRIES',\n  FETCH_CITIES = 'FETCH_CITIES'\n}\n\nexport type InitialStateType = {\n  countries: IListCountries;\n  cities: IListCities;\n};\n\nexport type CountriesActionType = {\n  type: Types.FETCH_COUNTRIES;\n  payload: IListCountries;\n};\n\nexport type CitiesActionType = {\n  type: Types.FETCH_CITIES;\n  payload: IListCities;\n};\n\nexport type Actions = CountriesActionType | CitiesActionType;\n","import { Types } from './types';\nimport { IListCountries, IListCities } from 'types';\nimport { CountriesActionType, CitiesActionType } from './types';\n\nexport const setCountriesAction = (payload: IListCountries): CountriesActionType => ({\n  type: Types.FETCH_COUNTRIES,\n  payload\n});\n\nexport const setCitiesAction = (payload: IListCities): CitiesActionType => ({\n  type: Types.FETCH_CITIES,\n  payload\n});\n","export enum PAGE {\n  HOME = '/cities',\n  COUNTRIES = '/cities/countries',\n  CITIES = '/cities/cities'\n}\n","import { Types } from './types';\nimport { InitialStateType, Actions } from './types';\n\nexport const initialState: InitialStateType = {\n  countries: {\n    data: [],\n    links: [],\n    metadata: {\n      currentOffset: 0,\n      totalCount: 0\n    }\n  },\n  cities: {\n    data: [],\n    links: [],\n    metadata: {\n      currentOffset: 0,\n      totalCount: 0\n    }\n  }\n};\n\nexport const reducer = (\n  state: typeof initialState = initialState,\n  action: Actions\n): InitialStateType => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case Types.FETCH_COUNTRIES:\n      return <InitialStateType>{\n        ...state,\n        countries: payload\n      };\n    case Types.FETCH_CITIES:\n      return <InitialStateType>{\n        ...state,\n        cities: payload\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer, createContext, FC, Dispatch } from 'react';\nimport { initialState, reducer } from './reducers';\nimport { InitialStateType, Actions } from './types';\n\nexport const GeoContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<Actions>;\n}>({\n  state: initialState,\n  dispatch: () => null\n});\n\nexport const GeoProvider: FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return <GeoContext.Provider value={{ state, dispatch }}>{children}</GeoContext.Provider>;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PAGE } from 'common/constants';\nimport styles from './index.module.css';\n\nconst Header = (): JSX.Element => (\n  <div className={styles.wrapper}>\n    <div className={styles.inner}>\n      <nav className={styles.nav}>\n        <Link to={PAGE.HOME} className={styles.link}>\n          Home\n        </Link>\n        <Link to={PAGE.COUNTRIES} className={styles.link}>\n          Countries\n        </Link>\n        <Link to={PAGE.CITIES} className={styles.link}>\n          Cities\n        </Link>\n      </nav>\n      <div className={styles.settings}>settings</div>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport styles from './index.module.css';\n\nconst Home = (): JSX.Element => {\n  return <div className={styles.wrapper}>Home</div>;\n};\n\nexport default Home;\n","import React, { FC } from 'react';\nimport { IListCountries } from 'types';\nimport styles from './index.module.css';\n\ninterface Props {\n  countries: IListCountries;\n}\n\nconst Country: FC<Props> = ({ countries = {} }) => {\n  const { data = [], metadata } = countries;\n\n  return (\n    <div className={styles.wrapper}>\n      <h3 className={styles.title}>Countries List</h3>\n      {data.map(({ code, name }) => (\n        <div key={code} className={styles.item}>\n          {name} - {code}\n        </div>\n      ))}\n      <div>\n        <span className={styles.total}>Total: {metadata?.totalCount || 0}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Country;\n","import { IListCountries, IListCities } from 'types';\n\nconst makeRequest = async (url: string, method?: 'get' | 'post', params?: []) => {\n  const options = {\n    headers: {\n      'content-type': 'application/json',\n      'x-rapidapi-host': 'wft-geo-db.p.rapidapi.com',\n      'x-rapidapi-key': '22c953082emsha514076bb452b74p1b64aejsn1dfc41e5ca42'\n    },\n    method,\n    body:\n      params &&\n      JSON.stringify({\n        ...params\n      })\n  };\n\n  try {\n    const response = await fetch(url, options);\n    const json = await response.json();\n    const { error } = json;\n\n    if (error) {\n      const { message, code } = error;\n      throw new Error(message || code);\n    }\n\n    return json;\n  } catch (error: any) {\n    throw new Error(error);\n  }\n};\n\nexport const getCountries = (): Promise<IListCountries> =>\n  makeRequest('https://wft-geo-db.p.rapidapi.com/v1/geo/countries?limit=10', 'get');\n\nexport const getCities = (): Promise<IListCities> =>\n  makeRequest('https://wft-geo-db.p.rapidapi.com/v1/geo/cities?limit=10', 'get');\n","import React from 'react';\n\nconst loader = (\n  <svg width=\"108\" height=\"108\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\">\n    <defs>\n      <linearGradient x1=\"8.042%\" y1=\"0%\" x2=\"65.682%\" y2=\"23.865%\" id=\"a\">\n        <stop stopColor=\"#5D7E9E\" stopOpacity=\"0\" offset=\"0%\" />\n        <stop stopColor=\"#5D7E9E\" stopOpacity=\".631\" offset=\"63.146%\" />\n        <stop stopColor=\"#5D7E9E\" offset=\"100%\" />\n      </linearGradient>\n    </defs>\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <g transform=\"translate(1 1)\">\n        <path d=\"M36 18c0-9.94-8.06-18-18-18\" id=\"Oval-2\" stroke=\"url(#a)\" strokeWidth=\"2\">\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            from=\"0 18 18\"\n            to=\"360 18 18\"\n            dur=\"0.9s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <circle fill=\"#fff\" cx=\"36\" cy=\"18\" r=\"1\">\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            from=\"0 18 18\"\n            to=\"360 18 18\"\n            dur=\"0.9s\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default {\n  loader\n};\n","import React from 'react';\nimport svgIcon from 'assets/svgIcon';\nimport styles from './index.module.css';\n\nconst Loader = (): JSX.Element => {\n  return <div className={styles.wrapper}>{svgIcon.loader}</div>;\n};\n\nexport default Loader;\n","import React, { ButtonHTMLAttributes, ReactNode } from 'react';\nimport styles from './index.module.css';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  children: ReactNode;\n}\nconst Button = ({ children, ...props }: Props): JSX.Element => {\n  return (\n    <button className={styles.button} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Country from 'components/Countries/Country';\nimport { useCountries } from 'hooks';\nimport { Loader } from 'common';\nimport styles from './index.module.css';\n\nconst Cities = (): JSX.Element => {\n  const [countries, isLoading] = useCountries();\n\n  return (\n    <div className={styles.wrapper}>\n      <div>{isLoading ? <Loader /> : <Country countries={countries} />}</div>\n    </div>\n  );\n};\n\nexport default Cities;\n","import { useContext, useEffect, useState } from 'react';\nimport { IListCountries } from 'types';\nimport { getCountries } from 'api';\nimport { GeoContext, setCountriesAction } from 'store/geodb';\n\nexport const useCountries = (): readonly [IListCountries, boolean] => {\n  const [countries, setCountries] = useState<IListCountries>({} as IListCountries);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { state, dispatch } = useContext(GeoContext);\n\n  useEffect(() => {\n    let cleanup = false;\n\n    const fetchData = async () => {\n      const result = await getCountries();\n      if (!cleanup) {\n        dispatch(setCountriesAction(result));\n\n        setIsLoading(false);\n      }\n    };\n\n    fetchData().catch(console.error);\n\n    return () => {\n      cleanup = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    setCountries(state.countries);\n  }, [state.countries]);\n\n  return [countries, isLoading] as const;\n};\n","import React, { FC } from 'react';\nimport { IListCities } from 'types';\nimport { Button } from 'common';\nimport styles from './index.module.css';\n\ninterface Props {\n  cities: IListCities;\n  loadFetch: () => void;\n}\n\nconst City: FC<Props> = ({ cities = {}, loadFetch }) => {\n  const { data = [], metadata, message = '' } = cities;\n\n  return (\n    <div className={styles.wrapper}>\n      <h3 className={styles.title}>Cities List</h3>\n      {message ? (\n        <Button onClick={loadFetch}>{'Show list!'}</Button>\n      ) : (\n        data.map(({ id, name, country }) => (\n          <div key={id} className={styles.item}>\n            {name} - {country}\n          </div>\n        ))\n      )}\n      <div>\n        <span className={styles.total}>Total: {metadata?.totalCount || 0}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default City;\n","import React from 'react';\nimport City from 'components/Cities/City';\nimport { useCities } from 'hooks';\nimport { Loader } from 'common';\nimport styles from './index.module.css';\n\nconst Cities = (): JSX.Element => {\n  const [cities, isLoading] = useCities();\n\n  // Todo::\n  const loadFetch = (): void => {\n    console.log('Under development');\n  };\n\n  // useEffect(() => {\n  //   setIsLoadingLoad(isLoading);\n  // }, [cities, isLoading]);\n\n  return (\n    <div className={styles.wrapper}>\n      <div>{isLoading ? <Loader /> : <City cities={cities} loadFetch={loadFetch} />}</div>\n    </div>\n  );\n};\n\nexport default Cities;\n","import { useContext, useEffect, useState } from 'react';\nimport { IListCities } from 'types';\nimport { getCities } from 'api';\nimport { GeoContext, setCitiesAction } from 'store/geodb';\n\nexport const useCities = (): readonly [IListCities, boolean] => {\n  const [cities, setCities] = useState<IListCities>({} as IListCities);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { state, dispatch } = useContext(GeoContext);\n\n  useEffect(() => {\n    let cleanup = false;\n\n    const fetchData = async () => {\n      const result = await getCities();\n      console.log(result);\n      if (!cleanup) {\n        dispatch(setCitiesAction(result));\n        setIsLoading(false);\n      }\n    };\n\n    fetchData().catch(console.error);\n\n    return () => {\n      cleanup = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    setCities(state.cities);\n  }, [state.cities]);\n\n  return [cities, isLoading] as const;\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { PAGE } from 'common/constants';\nimport Home from 'components/Home';\nimport Countries from 'components/Countries';\nimport Cities from 'components/Cities';\nimport styles from './index.module.css';\n\nconst Main = (): JSX.Element => {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.page}>\n        <Routes>\n          <Route path={PAGE.HOME} element={<Home />} />\n          <Route path={PAGE.COUNTRIES} element={<Countries />} />\n          <Route path={PAGE.CITIES} element={<Cities />} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Header from 'components/Header';\nimport Main from 'components/Main';\nimport styles from './index.module.css';\n\nconst App = (): JSX.Element => (\n  <div className={styles.wrapper}>\n    <div className={styles.main}>\n      <Header />\n      <Main />\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport { MemoryRouter } from 'react-router-dom';\nimport { GeoProvider } from 'store/geodb';\nimport App from 'components/App';\nimport './index.css';\n\nconst Root = (): JSX.Element => (\n  <MemoryRouter initialEntries={['/cities']}>\n    <GeoProvider>\n      <App />\n    </GeoProvider>\n  </MemoryRouter>\n);\n\nexport default Root;\n","import 'polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3SruP\",\"inner\":\"Header_inner__3Eeoc\",\"nav\":\"Header_nav__2jc3U\",\"settings\":\"Header_settings__Y7mQz\",\"link\":\"Header_link__3ZVyL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Country_wrapper__1eCP_\",\"item\":\"Country_item__1FJVW\",\"title\":\"Country_title__11yzB\",\"total\":\"Country_total__1xsnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"City_wrapper__2Qq-U\",\"item\":\"City_item__3t2vW\",\"title\":\"City_title__2lz8W\",\"total\":\"City_total__17NAV\"};"],"sourceRoot":""}